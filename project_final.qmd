---
title: "PROJECT"
subtitle: "BLAL BLA BLA"
author: anonymous
format:
  html:
    toc: true
    code-tools: true
    code-line-numbers: true
    msainfont: Georgia, serif
    page-layout: article
  pdf:  
    number-sections: true
    code-annotations: none
editor: source
---

:::: {.content-hidden when-format="pdf"}
::: {.callout-warning collapse=false}
 
## Setup

Install packages:

```{r}
#| label: Setup
remotes::install_github("higgi13425/medicaldata")
library(medicaldata)
library(dplyr)
library(brms)
library(corrplot)
library(rstanarm)
library(ggplot2)
library(loo)
library(rstanarm)
library(caret)
```

Import the data:

```{r}
#| label: Importing data
cath <- medicaldata::cath
```

:::
::::


# Introduction 

- Background
- Problem formulation/scope
- Main modeling idea
- Some picture of the data?

# Data Desctription

- Data set:

```{r}
#| label: Data description
#| echo: false
#| message: false
#| warning: false

head(cath)
```

Histograms and barplot of the explanatory variables:

```{r}
#| label: Univariate analysis part 1
#| echo: false

variable_names = names(cath)
par(mfrow = c(1,4))
barplot(table(cath[,1]), main = variable_names[1])
for(i in 2:4){
  hist(cath[[i]], main = variable_names[i])
}

```

Barplots of the responsive variables:

```{r}
#| label: Univariate analysis part 2
#| echo: false

par(mfrow = c(1,2))
for(i in 5:6){
  barplot(table(cath[,i]), main = variable_names[i])
}
```

Explanation on data preprocessing (removing NA rows, scaling variables, removing tvdlm etc.)

```{r}
#| label: Data preprocessing
#| echo: false
#| warning: false
#| message: false

# Remove tvdlm column
# Remove rows with at least one NA value
cath <- cath %>%
  na.omit() %>%
  select(-tvdlm)

# Scale the variables
for (i in 1:(ncol(cath)-2)){
    cath[i] <- scale(cath[i])
}

# Make response variable a factor
cath$sigdz <- as.factor(cath$sigdz)
```

- Histograms
- Correlations
- Has it been used in previous studies?


# Mathematical Model

- Bayesian logistic regression
- Likelihood
- Priors
- Posteriors


# Model Definitions and Implementation

- Tie mathematical model to our implementation
- Ndraws, warmup, etc.

Linear model:

```{r}
p <- ncol(cath)

x <- model.matrix(sigdz ~ . - 1, data=cath)
y <- cath$sigdz

# Formula
formula_linear <- formula(sigdz ~ sex + age + cad_dur + choleste)

# Prior
prior_linear <- student_t(df = 3, location = 0, scale = 2.5)

# linear_model <- stan_glm(formula_linear, data = cath,
#                  family = binomial(link = "logit"), 
#                  prior = prior_linear, prior_intercept = prior_linear, QR=TRUE,
#                  refresh=0)

# saveRDS(linear_model, file = "./additional_files/model_linear")
linear_model <- readRDS("./additional_files/model_linear")                
```


Nonlinear model:

```{r}
# Formula
formula_nonlinear <- formula(sigdz ~ sex + s(age) + s(cad_dur) + s(choleste))

# model_nonlinear <- stan_gamm4(
#   formula_nonlinear, data = cath,
#   family = binomial(link = "logit")
# )

# saveRDS(model_nonlinear, file = "./additional_files/model_nonlinear")
model_nonlinear <- readRDS("./additional_files/model_nonlinear")
```

# Model Evaluation
- Rhat, ESS, HMC divergences, pp_check(), loo_compare(), classification accuracy
- Prior sensitivity analysis

Nonlinear model:

```{r}
summary(model_nonlinear)
pp_check(model_nonlinear)
```

# Discussion
- Problems, potential improvements?
- Conclusion of analysis

# Lessons Learned


# References

